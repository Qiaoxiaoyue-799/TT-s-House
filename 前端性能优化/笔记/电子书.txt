手动构建电子书
1.github建仓库：
初始readme，两个选项选择node 、 MIT License

2.下载仓库

3.在文件夹内创建子文件
touch ch01.md
touch SUMMARY.md(目录文件)

4.编辑文件

ch01.md:
# ch01
这是第一章

README.md:
# dianzibooktt
这是一个自动化构建Demo

SUMMARY.md:（内容的符号为半角）
- [连接名字](连接地址)
如：
- [简介](README.md)
- [第一章])(ch01.md)
- [第二章])(ch02.md)

5.检查编辑内容：
在文件内git bash
cat ch01.md
可查看该文件内容

6.gitbook --version 查看版本号

7.gitbook build 进行构建电子书
 (注意：_book内不出现html文件，检查SUMMARY内容)

8.把_book整个文件移出该文件，先上传其他文件。

9.上传其他文件
git add .
git commit -m "a"
git push

10.设置gh-pages(转换发布分支)
git checkout -b gh-pages

11.把_book所有的子文件全部拷贝回电子书文件内。
（注意：不是整个文件，是所有子文件，同名跳过）

12.再次提交到github
（注意：此次git push 有参数）
git push -u origin gh-pages

13.gitHub查看
Branch从master切换至gh-pages

14.查看
https://{account-name}.github.io/{repo-name}
我的电子书示例：
https://qiaoxiaoyue-799.github.io/dianzibooktt/

15.如果要添加新章节：
切换分支git checkout master

16.添加新的章节ch03.md

17.修改SUMMARY.md

18.gitbook build

19.再次重复上一遍内容


因过程繁琐，引入自动化构建。(******在master分支)
自动化构建：
1.添加.travis.yml文件
内容：

language: node_js
node_js:
  - "node"

after_script:
  - gitbook build
  - cd ./_book
  - git init
  - git config user.name "${USER_NAME}"
  - git config user.email "${USER_EMAIL}"
  - git add .
  - git commit -m "publish gitbook"
  - git push --force --quiet "https://${ACC_TOKEN}@${GH_REF}" master:${BRANCH}

branches:
  only:
    - master

2.提交仓库
git add .
git commit -m "ch03"
git push

在commit中查看构建错误。（黄点变×）

3.初始化package.json
npm init -y

4. npm i -D gitbook-cli

5.修改package.json
test的exit改为0
author改为qxy
license改为MIT

6.进入travis.ci的setting设置环境变量
ACC_TOKEN:     d5433f9ab6cd615b0bb5fda017b5

BRANCH:           gh-pages

GH_REF:            github.com/{account_name}/{repos_name}
	        github.com/Qiaoxiaoyue-799/register

USER_EMAIL:   邮箱
	        1194110992@qq.com

USER_NAME:   github自己名
	       Qiaoxiaoyue-799
注意：
accesstoken在github的settings->Developer settings->Personal access tokens
点击Generate new token创建新的token
写好note描述只选中repo
我的token：f3328e165aa7e26668b034b250decc35e7c3907e

7.再次上传仓库，点击commit检查构建情况，绿色√即成功。

8.如果要更新章节：
touch ch05.md
更新ch05和summary
提交仓库（注意：本次git push不用参数，一般提交即可。）

ebook repo demo：
1.手动构建电子书
2.手动发布电子书
3.增加新的章节
4.引入自动化构建脚本 .travis.yml
5.修改 package.json，并增加travisCI环境变量
6.实现自动化构建